name: ci-checks

# run on all pull requests and on select branch pushes
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '30 3 1 */1 *'  # At 03:30 on the 1st of every month
  workflow_dispatch:

jobs:

  check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-24.04, r: 'release'} #ensures we are running with a recent version of gcc similar to CRAN
          - {os: windows-2025, r: 'release'}
    env:
      R_KEEP_PKG_SOURCE: yes
    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
      - uses: r-lib/actions/setup-tinytex@v2
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, any::covr, any::DT, any::devtools
          needs: |
            dev
            website
      - name: Check R Code Style
        shell: bash
        run: |
          R -e "styler::style_pkg('.')"
          git diff --exit-code --compact-summary || { echo "Code formatting failed; run 'styler::style_pkg()'"; exit 1; }
      - name: Debug Issue with PBPK Vignette
        shell: Rscript {0}
        run: |
          devtools::build()
          devtools::install()
          library(MCSimMod)
          mod_path <- file.path(system.file(package = "MCSimMod"), "extdata")
          pbpk_mod_name <- file.path(mod_path, "pbpk_simple")
          pbpk_mod <- createModel(pbpk_mod_name)
          pbpk_mod$loadModel()
      - name: Check Package
        uses: r-lib/actions/check-r-package@v2
      - name: Test Coverage
        run: Rscript scripts/coverage.R
      - name: Build documentation
        if: runner.os == 'Linux'
        shell: Rscript {0}
        run: |
          devtools::build_site(preview = F, new_process = F)
          devtools::build_manual(pkg = ".", path = "dist")
      - name: Upload Coverage and Documentation
        uses: actions/upload-artifact@v4
        if: runner.os == 'Linux'
        with:
          name: mcsimmod
          path: |
            coverage
            docs
            dist
          retention-days: 90
      - name: Upload Pages
        uses: actions/upload-pages-artifact@v3
        if: runner.os == 'Linux'
        with:
          path: docs

  deploy-docs:
    name: Deploy to GitHub Pages
    needs: check
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'  # only run on push to main
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
